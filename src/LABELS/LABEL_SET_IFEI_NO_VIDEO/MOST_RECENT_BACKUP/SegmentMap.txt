/*
================================================================================
SEGMENT MAP FILE (IFEI_SegmentMap.h, etc.)
================================================================================

**DO NOT SKIP THIS BLOCK. IF YOU IGNORE THIS, YOUR DISPLAY OUTPUT WILL BE BROKEN.**

WHAT THIS FILE IS:
------------------
This file defines the *PHYSICAL mapping* between logical display fields (digits, bargraphs, indicators)
and the SPECIFIC RAM addresses, bits, and ***chip IDs (ledID)*** for each segment in the display hardware.

ABSOLUTELY EVERY SegmentMap[] array (e.g. myMap[3][7]) defines the segment order for each digit.
**THIS ORDER IS *ALMOST NEVER STANDARD* AND MUST BE DOCUMENTED BELOW.**

***THE SEGMENT ORDER IN EACH ARRAY _MUST_ MATCH THE SOFTWARE FONT TABLE ORDER.***

EXACT SEGMENT ORDER:
--------------------
The ONLY correct order is the one your FONT TABLES expect. 
EXAMPLE for standard 7-segment displays:
  // For each digit [d][s]:
  // [0]=TOP, [1]=TOP-RIGHT, [2]=BOTTOM-RIGHT, [3]=BOTTOM, [4]=BOTTOM-LEFT, [5]=TOP-LEFT, [6]=MIDDLE

If your RAM walker discovered them in a DIFFERENT order (and it almost always does), ***YOU MUST REORDER THEM HERE***.
**DO NOT** copy the physical RAM walker order directly! You MUST create a mapping that matches your logical font order.

WHY THIS MATTERS:
-----------------
- If your SegmentMap order does NOT match your font tables, you WILL get scrambled digits, missing segments, or unreadable junk. "8" will look like "0", "0" will look like a 'C', etc.
- ALL digit/letter patterns in your font tables MUST map to the segments in the same index order in your SegmentMap.
- Hardware wiring is *never* consistent between displays. If you do not remap, your code WILL be broken.

ABSOLUTE WARNING ON ledID (CHIP ID):
-------------------------------------
**EVERY SegmentMap entry has a CHIP_ID (aka ledID).**
THIS IS *NOT* OPTIONAL. If you set the wrong ledID, your digits/segments will appear on the wrong physical chip, the wrong display, or not at all.
BE OBSESSIVE: CHECK THE ledID FOR EVERY ENTRY. 
**If you want two fields (e.g. clock and timer) to show on the same physical HT1622, THEY MUST HAVE THE SAME ledID!**
If you change wiring or want to move a field to a different display, update ledID everywhere in the array.

STRUCTURE:
----------
- Each entry:   `{ RAM_ADDR, BIT, CHIP_ID }`
- [digit][segment]: e.g., `[3][7]` = 3 digits, 7 segments per digit, but segment order is **custom!**
- YOU MUST DOCUMENT THE MEANING OF EACH [x][y] INDEX ABOVE EVERY MAP.
- **If you do not, anyone (including LLMs) will fuck this up. Do not trust auto-generation.**

HOW TO BUILD/VERIFY:
--------------------
1. Use your RAM walker (or manual test code) to discover the *physical* on-screen order of each segment for each digit. This means: cycle every segment in hardware, WRITE DOWN THE EXACT SEQUENCE as they appear.
2. ***Map EVERY discovered segment to the correct logical position in your font order!***
3. For every map: Add a comment block above it that lists what each index means, e.g. [0]=TOP, [1]=TOP-RIGHT, etc.
4. When writing/using font tables (digits or alpha), ***make sure the index order matches this mapping***.
5. **Do NOT skip ledID. Do NOT skip comments.**

NEVER DO THIS (Bad Examples):
-----------------------------
- Never paste RAM walker output directly as your SegmentMap! This WILL SCRAMBLE YOUR DIGITS.
- Never ignore chip ID (ledID)! If it's wrong, nothing will show, or you'll get ghosting/crossed-up panels.

TYPICAL USE CASE:
-----------------
- Calling `renderField("IFEI_SP", "SP ")` uses this map and the matching pattern for "S" and "P" in the DOCUMENTED ORDER and on the correct CHIP/ledID.

================================================================================
EXAMPLE â€” HOW TO DOCUMENT ORDER (REQUIRED!):

// 7-segment (logical font order!)
// [0]=TOP, [1]=TOP-RIGHT, [2]=BOTTOM-RIGHT, [3]=BOTTOM, [4]=BOTTOM-LEFT, [5]=TOP-LEFT, [6]=MIDDLE
const SegmentMap myMap[3][7] = {
  { ... }, // Digit 1 (100s)
  { ... }, // Digit 2 (10s)
  { ... }, // Digit 3 (1s)
};
// If your hardware order is different, MAP IT TO THIS LOGIC. DO NOT SKIP!

================================================================================
*FINAL WARNING:* If you get scrambled digits, missing bars, or ghost segments, YOU HAVE IGNORED THIS BLOCK..
================================================================================
*/